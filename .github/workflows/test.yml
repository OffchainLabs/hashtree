name: test
on: [pull_request, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.settings.name }}
    runs-on: ${{ matrix.settings.runner }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - name: MacOS arm64
            target: aarch64-apple-darwin
            runner: macos-latest
          - name: Linux x86
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
          - name: Linux arm64
            target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest
          - name:  Linux x86 using clang
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            cc: clang
          - name:  Linux arm64 using clang
            target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest
            cc: clang
          - name: Windows x86
            target: x86_64-pc-windows-msvc
            runner: windows-latest
          - name: Windows arm64
            target: aarch64-pc-windows-msvc
            runner: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cross-Compile Build
        if: ${{ matrix.settings.cc != '' }}
        run: CC=${{ matrix.settings.cc }} make all
      - name: Build
        if: ${{ !matrix.settings.cc }}
        run: make all
      - name: Run tests
        run: ./build/test

  rust-bindings:
    runs-on: ${{ matrix.settings.host }}
    name: (${{ matrix.settings.target }})
    strategy:
      fail-fast: false
      matrix:
        settings:
          - target: aarch64-apple-darwin
            host: macos-latest
          - target: x86_64-unknown-linux-gnu
            host: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            host: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            host: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            host: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            host: windows-latest
          - target: aarch64-pc-windows-msvc
            host: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: install rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
        sh rustup-init.sh -y --default-toolchain none
        rustup target add ${{ matrix.settings.target }}
    - name: Build and Test
      run: |
        cargo build --release --target ${{ matrix.settings.target }}
        cargo test --target ${{ matrix.settings.target }}

  nim:
    name: nim
    runs-on: ubuntu-latest
    steps:
      - uses: jiro4989/setup-nim-action@v1
      - uses: actions/checkout@v3
      - name: Run Nim test
        run: nim c -r tests/test_hashtree_abi.nim



  # windows:
  #   name: windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Install MinGW
  #       run: |
  #         choco install mingw
  #         echo "C:\tools\mingw64\bin" >> $GITHUB_PATH

  #     - name: Build
  #       run: make all
  #       shell: bash
        
  #     - name: Run tests
  #       run: ./build/test.exe
  #       shell: bash